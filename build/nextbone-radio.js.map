{"version":3,"file":null,"sources":["../src/backbone.radio.js"],"sourcesContent":["import _ from 'underscore';\r\nimport { Events } from 'nextbone';\r\n\r\nvar Radio = {};\r\n\r\nRadio.VERSION = '<%= version %>';\r\n\r\n// Whether or not we're in DEBUG mode or not. DEBUG mode helps you\r\n// get around the issues of lack of warnings when events are mis-typed.\r\nRadio.DEBUG = false;\r\n\r\n// Format debug text.\r\nfunction debugText(warning, eventName, channelName) {\r\n  return warning + (channelName ? ' on the ' + channelName + ' channel' : '') +\r\n    ': \"' + eventName + '\"';\r\n}\r\n\r\n// This is the method that's called when an unregistered event was called.\r\n// By default, it logs warning to the console. By overriding this you could\r\n// make it throw an Error, for instance. This would make firing a nonexistent event\r\n// have the same consequence as firing a nonexistent method on an Object.\r\nRadio.debugLog = function(warning, eventName, channelName) {\r\n  if (Radio.DEBUG && console && console.warn) {\r\n    console.warn(debugText(warning, eventName, channelName));\r\n  }\r\n};\r\n\r\nvar eventSplitter = /\\s+/;\r\n\r\n// An internal method used to handle Radio's method overloading for Requests.\r\n// It's borrowed from Backbone.Events. It differs from Backbone's overload\r\n// API (which is used in Backbone.Events) in that it doesn't support space-separated\r\n// event names.\r\nfunction eventsApi(obj, action, name, rest) {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n\r\n  var results = {};\r\n\r\n  // Handle event maps.\r\n  if (typeof name === 'object') {\r\n    for (var key in name) {\r\n      var result = obj[action].apply(obj, [key, name[key]].concat(rest));\r\n      eventSplitter.test(key) ? _.extend(results, result) : results[key] = result;\r\n    }\r\n    return results;\r\n  }\r\n\r\n  // Handle space separated event names.\r\n  if (eventSplitter.test(name)) {\r\n    var names = name.split(eventSplitter);\r\n    for (var i = 0, l = names.length; i < l; i++) {\r\n      results[names[i]] = obj[action].apply(obj, [names[i]].concat(rest));\r\n    }\r\n    return results;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// An optimized way to execute callbacks.\r\nfunction callHandler(callback, context, args) {\r\n  switch (args.length) {\r\n    case 0: return callback.call(context);\r\n    case 1: return callback.call(context, args[0]);\r\n    case 2: return callback.call(context, args[0], args[1]);\r\n    case 3: return callback.call(context, args[0], args[1], args[2]);\r\n    default: return callback.apply(context, args);\r\n  }\r\n}\r\n\r\n// A helper used by `off` methods to the handler from the store\r\nfunction removeHandler(store, name, callback, context) {\r\n  var event = store[name];\r\n  if (\r\n     (!callback || (callback === event.callback || callback === event.callback._callback)) &&\r\n     (!context || (context === event.context))\r\n  ) {\r\n    delete store[name];\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction removeHandlers(store, name, callback, context) {\r\n  store || (store = {});\r\n  var names = name ? [name] : _.keys(store);\r\n  var matched = false;\r\n\r\n  for (var i = 0, length = names.length; i < length; i++) {\r\n    name = names[i];\r\n\r\n    // If there's no event by this name, log it and continue\r\n    // with the loop\r\n    if (!store[name]) {\r\n      continue;\r\n    }\r\n\r\n    if (removeHandler(store, name, callback, context)) {\r\n      matched = true;\r\n    }\r\n  }\r\n\r\n  return matched;\r\n}\r\n\r\n/*\r\n * tune-in\r\n * -------\r\n * Get console logs of a channel's activity\r\n *\r\n */\r\n\r\nvar _logs = {};\r\n\r\n// This is to produce an identical function in both tuneIn and tuneOut,\r\n// so that Backbone.Events unregisters it.\r\nfunction _partial(channelName) {\r\n  return _logs[channelName] || (_logs[channelName] = Radio.log.bind(Radio, channelName));\r\n}\r\n\r\n_.extend(Radio, {\r\n\r\n  // Log information about the channel and event\r\n  log: function(channelName, eventName) {\r\n    if (typeof console === 'undefined') { return; }\r\n    var args = _.toArray(arguments).slice(2);\r\n    console.log('[' + channelName + '] \"' + eventName + '\"', args);\r\n  },\r\n\r\n  // Logs all events on this channel to the console. It sets an\r\n  // internal value on the channel telling it we're listening,\r\n  // then sets a listener on the Backbone.Events\r\n  tuneIn: function(channelName) {\r\n    var channel = Radio.channel(channelName);\r\n    channel._tunedIn = true;\r\n    channel.on('all', _partial(channelName));\r\n    return this;\r\n  },\r\n\r\n  // Stop logging all of the activities on this channel to the console\r\n  tuneOut: function(channelName) {\r\n    var channel = Radio.channel(channelName);\r\n    channel._tunedIn = false;\r\n    channel.off('all', _partial(channelName));\r\n    delete _logs[channelName];\r\n    return this;\r\n  }\r\n});\r\n\r\n/*\r\n * Backbone.Radio.Requests\r\n * -----------------------\r\n * A messaging system for requesting data.\r\n *\r\n */\r\n\r\nfunction makeCallback(callback) {\r\n  if (_.isFunction(callback)) {\r\n    return callback;\r\n  }\r\n  var result = function() { return callback; };\r\n  result._callback = callback;\r\n  return result;\r\n}\r\n\r\n/*\r\n * Radio.Channel\r\n * ----------------------\r\n * A Channel is an object that extends from Backbone.Events\r\n *\r\n */\r\n\r\nclass Channel extends Events {\r\n  constructor(channelName) {\r\n    super();\r\n    this.channelName = channelName;\r\n  }\r\n\r\n  // Make a request\r\n  request(name) {\r\n    var args = _.toArray(arguments).slice(1);\r\n    var results = eventsApi(this, 'request', name, args);\r\n    if (results) {\r\n      return results;\r\n    }\r\n    var channelName = this.channelName;\r\n    var requests = this._requests;\r\n\r\n    // Check if we should log the request, and if so, do it\r\n    if (channelName && this._tunedIn) {\r\n      Radio.log.apply(this, [channelName, name].concat(args));\r\n    }\r\n\r\n    // If the request isn't handled, log it in DEBUG mode and exit\r\n    if (requests && (requests[name] || requests['default'])) {\r\n      var handler = requests[name] || requests['default'];\r\n      args = requests[name] ? args : arguments;\r\n      return callHandler(handler.callback, handler.context, args);\r\n    } else {\r\n      Radio.debugLog('An unhandled request was fired', name, channelName);\r\n    }\r\n  }\r\n\r\n  // Set up a handler for a request\r\n  reply(name, callback, context) {\r\n    if (eventsApi(this, 'reply', name, [callback, context])) {\r\n      return this;\r\n    }\r\n\r\n    this._requests || (this._requests = {});\r\n\r\n    if (this._requests[name]) {\r\n      Radio.debugLog('A request was overwritten', name, this.channelName);\r\n    }\r\n\r\n    this._requests[name] = {\r\n      callback: makeCallback(callback),\r\n      context: context || this\r\n    };\r\n\r\n    return this;\r\n  }\r\n\r\n  // Set up a handler that can only be requested once\r\n  replyOnce(name, callback, context) {\r\n    if (eventsApi(this, 'replyOnce', name, [callback, context])) {\r\n      return this;\r\n    }\r\n\r\n    var self = this;\r\n\r\n    var once = _.once(function() {\r\n      self.stopReplying(name);\r\n      return makeCallback(callback).apply(this, arguments);\r\n    });\r\n\r\n    return this.reply(name, once, context);\r\n  }\r\n\r\n  // Remove handler(s)\r\n  stopReplying(name, callback, context) {\r\n    if (eventsApi(this, 'stopReplying', name)) {\r\n      return this;\r\n    }\r\n\r\n    // Remove everything if there are no arguments passed\r\n    if (!name && !callback && !context) {\r\n      delete this._requests;\r\n    } else if (!removeHandlers(this._requests, name, callback, context)) {\r\n      Radio.debugLog('Attempted to remove the unregistered request', name, this.channelName);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  // Remove all handlers from the messaging systems of this channel\r\n  reset() {\r\n    this.off();\r\n    this.stopListening();\r\n    this.stopReplying();\r\n    return this;\r\n  }\r\n}\r\n\r\n/*\r\n * Radio.channel\r\n * ----------------------\r\n * Get a reference to a channel by name.\r\n *\r\n */\r\n\r\nRadio._channels = {};\r\n\r\nRadio.channel = function(channelName) {\r\n  if (!channelName) {\r\n    throw new Error('You must provide a name for the channel.');\r\n  }\r\n\r\n  if (Radio._channels[channelName]) {\r\n    return Radio._channels[channelName];\r\n  } else {\r\n    return (Radio._channels[channelName] = new Channel(channelName));\r\n  }\r\n};\r\n\r\n/*\r\n * Top-level API\r\n * -------------\r\n * Supplies the 'top-level API' for working with Channels directly\r\n * from Backbone.Radio.\r\n *\r\n */\r\n\r\nvar methods = ['request', 'reply', 'replyOnce', 'stopReplying', 'on', 'off', 'listenTo', 'stopListening', 'once', 'listenToOnce', 'trigger'];\r\n\r\nmethods.forEach(methodName => {\r\n  Radio[methodName] = function(channelName) {\r\n    var args = _.toArray(arguments).slice(1);\r\n    var channel = this.channel(channelName);\r\n    return channel[methodName].apply(channel, args);\r\n  };\r\n});\r\n\r\nRadio.reset = function(channelName) {\r\n  var channels = !channelName ? this._channels : [this._channels[channelName]];\r\n  _.each(channels, function(channel) { channel.reset();});\r\n};\r\n\r\nexport { Radio, Channel };\r\n"],"names":["Radio","VERSION","DEBUG","debugText","warning","eventName","channelName","debugLog","console","warn","eventSplitter","eventsApi","obj","action","name","rest","results","key","result","apply","concat","test","_","extend","names","split","i","l","length","callHandler","callback","context","args","call","removeHandler","store","event","_callback","removeHandlers","keys","matched","_logs","_partial","log","bind","toArray","arguments","slice","channel","_tunedIn","on","off","makeCallback","isFunction","Channel","Events","requests","_requests","handler","self","once","stopReplying","reply","stopListening","_channels","Error","methods","forEach","methodName","reset","channels","each"],"mappings":"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"}